version: "3.8"                                                # docker-compose 버전이다
services:
    nginx:                                                                                    
        image: nginx                             
        container_name: nginx
        ports:                                              # 포트 개방 "hostPort:dockerPort"으로 포워딩한다
            - "80:80"                                       
        volumes:                                            # 볼륨 마운트. 호스트의 파일을 사용하려면 필요하다                             
            - .:/pjtback                                      
            - ./config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf # nginx 세팅 마운트
        depends_on:  
            - web                                                                                                        
    web:                                                
        build: .                           # 메인으로 빌드될 Dockerfile을 적는다. 지금은 현재 폴더에 있다고 알린다
        container_name: web                             
        command: > 
            bash -c "python3 manage.py collectstatic --no-input &&   
            python3 manage.py makemigrations &&             
            python3 manage.py migrate &&                    
            gunicorn pjtback.wsgi:application --bind 0.0.0.0:8000"
        depends_on:
          db:
            condition: service_healthy
        ports:
            - "8000:8000"                                            
        volumes:                                            
            - .:/pjtback
    db:                                                     
        image: mysql:latest                                
        container_name: db
        ports:
            - "3307:3306"                            
        environment:
            MYSQL_DATABASE: django_mobile
            MYSQL_PASSWORD: sangjun1324                              
            MYSQL_ROOT_PASSWORD: sangjun1324
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            interval: "60s"
            timeout: "3s"
            start_period: "5s"
            retries: 3                                      


